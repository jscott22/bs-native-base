// Generated by BUCKLESCRIPT VERSION 3.0.0, PLEASE EDIT WITH CARE
'use strict';

var List = require("bs-platform/lib/js/list.js");
var $$Array = require("bs-platform/lib/js/array.js");
var ReasonReact = require("reason-react/lib/js/src/ReasonReact.js");
var NativeBase = require("native-base");
var Js_undefined = require("bs-platform/lib/js/js_undefined.js");
var UtilsRN$BsNativeBase = require("../private/utilsRN.js");

function make(style, accessibilityLabel, accessible, hitSlop, onAccessibilityTap, onLayout, onMagicTap, pointerEvents, removeClippedSubviews, testID, accessibilityComponentType, accessibilityLiveRegion, collapsable, importantForAccessibility, needsOffscreenAlphaCompositing, renderToHardwareTextureAndroid, accessibilityTraits, accessibilityViewIsModal, shouldRasterizeIOS, children) {
  return ReasonReact.wrapJsForReason(NativeBase.Footer, {
              style: Js_undefined.fromOption(style),
              accessibilityLabel: Js_undefined.fromOption(accessibilityLabel),
              accessible: Js_undefined.fromOption(UtilsRN$BsNativeBase.optBoolToOptJsBoolean(accessible)),
              hitSlop: Js_undefined.fromOption(hitSlop),
              onAccessibilityTap: Js_undefined.fromOption(onAccessibilityTap),
              onLayout: Js_undefined.fromOption(onLayout),
              onMagicTap: Js_undefined.fromOption(onMagicTap),
              removeClippedSubviews: Js_undefined.fromOption(UtilsRN$BsNativeBase.optBoolToOptJsBoolean(removeClippedSubviews)),
              pointerEvents: Js_undefined.fromOption(UtilsRN$BsNativeBase.option_map((function (x) {
                          if (x >= 416112227) {
                            if (x >= 427151639) {
                              return "box-only";
                            } else {
                              return "box-none";
                            }
                          } else if (x >= -922086728) {
                            return "none";
                          } else {
                            return "auto";
                          }
                        }), pointerEvents)),
              testID: Js_undefined.fromOption(testID),
              accessibilityComponentType: Js_undefined.fromOption(UtilsRN$BsNativeBase.option_map((function (x) {
                          if (x >= 310731477) {
                            if (x >= 735392028) {
                              return "radiobutton_unchecked";
                            } else {
                              return "radiobutton_checked-none";
                            }
                          } else if (x >= -639606286) {
                            return "button";
                          } else {
                            return "none";
                          }
                        }), accessibilityComponentType)),
              accessibilityLiveRegion: Js_undefined.fromOption(UtilsRN$BsNativeBase.option_map((function (x) {
                          if (x !== -114955603) {
                            if (x >= 536661202) {
                              return "assertive";
                            } else {
                              return "none";
                            }
                          } else {
                            return "polite";
                          }
                        }), accessibilityLiveRegion)),
              collapsable: Js_undefined.fromOption(UtilsRN$BsNativeBase.optBoolToOptJsBoolean(collapsable)),
              importantForAccessibility: Js_undefined.fromOption(UtilsRN$BsNativeBase.option_map((function (prop) {
                          if (prop >= 24641) {
                            if (prop >= 6039847) {
                              return "yes";
                            } else {
                              return "no";
                            }
                          } else if (prop >= -1017075213) {
                            return "noHideDescendants";
                          } else {
                            return "auto";
                          }
                        }), importantForAccessibility)),
              needsOffscreenAlphaCompositing: Js_undefined.fromOption(UtilsRN$BsNativeBase.optBoolToOptJsBoolean(needsOffscreenAlphaCompositing)),
              renderToHardwareTextureAndroid: Js_undefined.fromOption(UtilsRN$BsNativeBase.optBoolToOptJsBoolean(renderToHardwareTextureAndroid)),
              accessibilityTraits: Js_undefined.fromOption(UtilsRN$BsNativeBase.option_map((function (traits) {
                          var to_string = function (param) {
                            if (param >= -522290177) {
                              if (param >= -50329203) {
                                if (param !== 5343647) {
                                  if (param >= 829237851) {
                                    if (param >= 1030299483) {
                                      return "image";
                                    } else {
                                      return "selected";
                                    }
                                  } else if (param >= 15272742) {
                                    return "summary";
                                  } else {
                                    return "header";
                                  }
                                } else {
                                  return "key";
                                }
                              } else if (param >= -123392599) {
                                if (param >= -66829956) {
                                  return "disabled";
                                } else {
                                  return "adjustable";
                                }
                              } else if (param >= -487088280) {
                                return "search";
                              } else {
                                return "allowsDirectInteraction";
                              }
                            } else if (param >= -727597924) {
                              if (param >= -683287213) {
                                if (param >= -639606286) {
                                  return "button";
                                } else {
                                  return "startsMedia";
                                }
                              } else if (param >= -707934868) {
                                return "pageTurn";
                              } else {
                                return "frequentUpdates";
                              }
                            } else if (param >= -922086728) {
                              if (param >= -856044371) {
                                return "text";
                              } else {
                                return "none";
                              }
                            } else if (param >= -944564230) {
                              return "link";
                            } else {
                              return "plays";
                            }
                          };
                          return $$Array.of_list(List.map(to_string, traits));
                        }), accessibilityTraits)),
              accessibilityViewIsModal: Js_undefined.fromOption(UtilsRN$BsNativeBase.optBoolToOptJsBoolean(accessibilityViewIsModal)),
              shouldRasterizeIOS: Js_undefined.fromOption(UtilsRN$BsNativeBase.optBoolToOptJsBoolean(shouldRasterizeIOS))
            }, children);
}

exports.make = make;
/* ReasonReact Not a pure module */
